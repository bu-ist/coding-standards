<?xml version="1.0"?>
<ruleset name="phpbin-coding-standards">
	<description>PHPbin coding sniffs based off WordPress</description>

	<file>.</file>

	<rule ref="PHPCompatibility"/>
	<config name="testVersion" value="5.3-"/>

	<rule ref="WordPress">
			<!-- Disable sniff complaining about file comment -->
		<exclude name="Squiz.Commenting.FileComment.Missing" />

		<!-- Disable sniffs complaining about filenames -->
		<exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
		<exclude name="WordPress.Files.FileName.InvalidClassFileName" />

		<!-- Disable sniffs complaining about snake_case -->
		<exclude name="WordPress.NamingConventions.ValidVariableName.NotSnakeCase" />
		<exclude name="WordPress.NamingConventions.ValidVariableName.StringNotSnakeCase" />
		<exclude name="WordPress.NamingConventions.ValidVariableName.NotSnakeCaseMemberVar" />
		<exclude name="WordPress.NamingConventions.ValidVariableName.MemberNotSnakeCase" />
		<exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid" />

		<!-- Disable WP nonce sniffs -->
		<exclude name="WordPress.Security.NonceVerification.NoNonceVerification" />

		<!-- Disable WP PDO sniffs -->
		<exclude name="WordPress.DB.RestrictedClasses.mysql__PDO" />

		<!-- Disable all WP alt functions since we won't have WP alts in non-WP -->
		<exclude name="WordPress.WP.AlternativeFunctions" />
	</rule>

	<!-- Require methods and variables be in camelCase, PascalCase for classes -->
	<rule ref="Zend.NamingConventions.ValidVariableName.NotCamelCaps" />
	<rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps" />
	<rule ref="Squiz.Classes.ValidClassName.NotCamelCaps" />

	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>
	<!-- When running phpcs on Travis, the directory path contains "build".
	     If you use "*/build/*" as exclude-pattern, it results in having
	     no files for sniffing. Thus, try to be as specific as possible. -->
	<exclude-pattern>*/build/logs*</exclude-pattern>
</ruleset>
